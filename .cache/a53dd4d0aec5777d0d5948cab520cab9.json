{"id":"/eR+","dependencies":[{"name":"c:\\Users\\kotka\\Dev\\hrafnkellbaldurs-github-io\\hrafnkellbaldurs-github-io\\node_modules\\react-dom\\package.json","includedInParent":true,"mtime":1532874065053},{"name":"c:\\Users\\kotka\\Dev\\hrafnkellbaldurs-github-io\\hrafnkellbaldurs-github-io\\package.json","includedInParent":true,"mtime":1532876819721},{"name":"c:\\Users\\kotka\\Dev\\hrafnkellbaldurs-github-io\\hrafnkellbaldurs-github-io\\.babelrc","includedInParent":true,"mtime":1532871921309}],"generated":{"js":"\"use strict\";function r(r,a,c){Array.isArray(r)?r.forEach(a,c):r&&a.call(c,r)}module.exports=r;","map":{"mappings":[{"source":"node_modules\\react-dom\\lib\\forEachAccumulated.js","original":{"line":10,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\react-dom\\lib\\forEachAccumulated.js","original":{"line":20,"column":0},"generated":{"line":1,"column":13}},{"source":"node_modules\\react-dom\\lib\\forEachAccumulated.js","original":{"line":20,"column":0},"generated":{"line":1,"column":22}},{"source":"node_modules\\react-dom\\lib\\forEachAccumulated.js","original":{"line":20,"column":0},"generated":{"line":1,"column":24}},{"source":"node_modules\\react-dom\\lib\\forEachAccumulated.js","original":{"line":20,"column":0},"generated":{"line":1,"column":26}},{"source":"node_modules\\react-dom\\lib\\forEachAccumulated.js","original":{"line":20,"column":0},"generated":{"line":1,"column":28}},{"source":"node_modules\\react-dom\\lib\\forEachAccumulated.js","original":{"line":21,"column":0},"generated":{"line":1,"column":31}},{"source":"node_modules\\react-dom\\lib\\forEachAccumulated.js","original":{"line":21,"column":0},"generated":{"line":1,"column":37}},{"source":"node_modules\\react-dom\\lib\\forEachAccumulated.js","original":{"line":21,"column":0},"generated":{"line":1,"column":45}},{"source":"node_modules\\react-dom\\lib\\forEachAccumulated.js","original":{"line":22,"column":0},"generated":{"line":1,"column":48}},{"source":"node_modules\\react-dom\\lib\\forEachAccumulated.js","original":{"line":22,"column":0},"generated":{"line":1,"column":50}},{"source":"node_modules\\react-dom\\lib\\forEachAccumulated.js","original":{"line":22,"column":0},"generated":{"line":1,"column":58}},{"source":"node_modules\\react-dom\\lib\\forEachAccumulated.js","original":{"line":22,"column":0},"generated":{"line":1,"column":60}},{"source":"node_modules\\react-dom\\lib\\forEachAccumulated.js","original":{"line":23,"column":0},"generated":{"line":1,"column":63}},{"source":"node_modules\\react-dom\\lib\\forEachAccumulated.js","original":{"line":24,"column":0},"generated":{"line":1,"column":66}},{"source":"node_modules\\react-dom\\lib\\forEachAccumulated.js","original":{"line":24,"column":0},"generated":{"line":1,"column":68}},{"source":"node_modules\\react-dom\\lib\\forEachAccumulated.js","original":{"line":24,"column":0},"generated":{"line":1,"column":73}},{"source":"node_modules\\react-dom\\lib\\forEachAccumulated.js","original":{"line":24,"column":0},"generated":{"line":1,"column":75}},{"source":"node_modules\\react-dom\\lib\\forEachAccumulated.js","original":{"line":28,"column":0},"generated":{"line":1,"column":78}},{"source":"node_modules\\react-dom\\lib\\forEachAccumulated.js","original":{"line":28,"column":0},"generated":{"line":1,"column":85}},{"source":"node_modules\\react-dom\\lib\\forEachAccumulated.js","original":{"line":28,"column":0},"generated":{"line":1,"column":93}}],"sources":{"node_modules\\react-dom\\lib\\forEachAccumulated.js":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n'use strict';\n\n/**\n * @param {array} arr an \"accumulation\" of items which is either an Array or\n * a single item. Useful when paired with the `accumulate` module. This is a\n * simple utility that allows us to reason about a collection of items, but\n * handling the case when there is exactly one item (and we do not need to\n * allocate an array).\n */\n\nfunction forEachAccumulated(arr, cb, scope) {\n  if (Array.isArray(arr)) {\n    arr.forEach(cb, scope);\n  } else if (arr) {\n    cb.call(scope, arr);\n  }\n}\n\nmodule.exports = forEachAccumulated;"},"lineCount":null}},"hash":"7e667e2a1ea3f868bf4c920891f4a4b9","cacheData":{"env":{}}}